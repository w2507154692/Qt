#include "Date.h"
#include "time.h"

Date::Date(void) {
	time_t now = time(NULL);
	struct tm* t = localtime(&now);

	this->year = t->tm_year + 1900;
	this->month = t->tm_mon + 1;
	this->day = t->tm_mday;

	free(t);
}

Date::Date(int y, int m, int d) {
	this->year = y;
	this->month = m;
	this->day = d;
}

Date::~Date(void) {

}

void Date::SetYear(int y) {
	this->year = y;
}

void Date::SetMonth(int m) {
	this->month = m;
}

void Date::SetDay(int d) {
	this->day = d;
}

int Date::GetYear() {
	return this->year;
}

int Date::GetMonth() {
	return this->month;
}

int Date::GetDay() {
	return this->day;
}

Date& Date::operator()(int y, int m, int d) {
	this->year = y;
	this->month = m;
	this->day = d;
}

string Date::Format() {
	string str = to_string(this->year % 100) + "--";
	if (this->month < 10) str += "0";
	str += to_string(this->month) + "--";
	if (this->day < 10) str += "0";
	str += to_string(this->day);
	return str;
}

bool operator==(Date date1, Date date2) {
	if (date1.year != date2.year) return false;
	else if (date1.month != date2.month) return false;
	else if (date1.day != date2.day) return false;
	else return true;
}

bool operator!=(Date date1, Date date2) {
	if (date1.year != date2.year) return true;
	else if (date1.month != date2.month) return true;
	else if (date1.day != date2.day) return true;
	else return false;
}

std::istream& operator>>(std::istream& in, Date& date) {
	istream >> 
}


#include <iostream>
#include <string>
using namespace std;

class Date
{
public:
    // Constructor
    Date(void);
    Date(int y, int m, int d);

public:
    // Destructor
    virtual ~Date(void);

    // Setters
    void SetYear(int y);
    void SetMonth(int m);
    void SetDay(int d);

    // Getters
    int GetYear();
    int GetMonth();
    int GetDay();

    // Overloaded operator() for setting properties of Date object
    Date& operator()(int y, int m, int d);

    // Converts date attributes to string in "yy-mm-dd" format.
    string Format();

    // Overloaded comparison operators
    friend bool operator==(Date date1, Date date2);
    friend bool operator!=(Date date1, Date date2);

    // Overloaded standard input operator >> and operator << for I/O operations of Date object
    friend std::istream& operator>>(std::istream& in, Date& date);
    friend std::ostream& operator<<(std::ostream& out, Date& date);

private:
    int year;   // 1900-9999
    int month;  // 1-12
    int day;    // 1-31
};
